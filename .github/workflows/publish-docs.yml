# This workflow will build a Java project with Maven

name: Publish documentation to the project page

on:
  push:
    branches: [ main, release ]

jobs:
  build:
    if: github.repository == 'jdbc-observations/datasource-micrometer'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - name: Get project version
        run: |
            VERSION=$( ./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout )
            echo "project_version=$VERSION" >> $GITHUB_ENV

      - name: Process asciidoc
        run: ./mvnw install -Pdocs -pl docs javadoc:javadoc

      - name: Process javadoc
        run: ./mvnw javadoc:aggregate

        #
        # construct a directory to be copied to "gh-pages" branch
        #    target/deploy-documents/               -- map to "docs" dir in "gh-pages"
        #                 `-- <PROJECT_VERSION>   -- e.g. "0.9.0.BUILD-SNAPSHOT"
        #                       `-- docs/html/
        #                       `-- api/
        #                       `-- CHANGELOG.txt
        #                 `-- current-snapshot    -- for latest snapshot from main
        #                       `-- docs/html/
        #                       `-- api/
        #                       `-- CHANGELOG.txt
        #                 `-- current             -- for latest release version
        #                       `-- docs/html/
        #                       `-- api/
        #                       `-- CHANGELOG.txt

      - name: Prepare "project-version" documents
        run: |
          mkdir -p target/deploy-documents/${{ env.project_version }}/docs/html
          mkdir -p target/deploy-documents/${{ env.project_version }}/api
          cp -Rf docs/target/generated-docs/reference/html/* target/deploy-documents/${{ env.project_version }}/docs/html/
          cp -Rf target/site/apidocs/* target/deploy-documents/${{ env.project_version }}/api/
          cp CHANGELOG target/deploy-documents/${{ env.project_version }}/CHANGELOG.txt

      - name: Prepare "current-snapshot" documents
        if: "github.ref == 'refs/heads/main' && contains(env.project_version, 'snapshot')"
        run: |
          mkdir -p target/deploy-documents/current-snapshot/docs/html
          mkdir -p target/deploy-documents/current-snapshot/api
          cp -Rf docs/target/generated-docs/reference/html/* target/deploy-documents/current-snapshot/docs/html/
          cp -Rf target/site/apidocs/* target/deploy-documents/current-snapshot/api/
          cp CHANGELOG target/deploy-documents/current-snapshot/CHANGELOG.txt

      - name: Prepare "current" documents
        if: "contains(env.project_version, 'release')"
        run: |
          mkdir -p target/deploy-documents/current/docs/html
          mkdir -p target/deploy-documents/current/api
          cp -Rf docs/target/generated-docs/reference/html/* target/deploy-documents/current/docs/html/
          cp -Rf target/site/apidocs/* target/deploy-documents/current/api/
          cp CHANGELOG target/deploy-documents/current/CHANGELOG.txt

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: target/deploy-documents

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
